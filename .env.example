# Create an ".env" file (without .example) and fill in the data. Keep this file secret!

# Application configuration
NODE_ENV=development
PORT=3000

# Link to frontend (to generate password reset links)
CLIENT_URL=https://translatorai.tech/

# Database configuration (replace <DATABASE_USERNAME>, <DATABASE_PASSWORD> and <DATABASE_NAME> with your data, provided by MongoDB)
DATABASE_URL=mongodb+srv://<DATABASE_USERNAME>:<DATABASE_PASSWORD>@cluster0.gniw2u9.mongodb.net/<DATABASE_NAME>?retryWrites=true&w=majority

# Email configuration (replace <GMAIL_EMAIL> and <GMAIL_PASSWORD_TOKEN> with your data, provided by Gmail *requires 2FA to be enabled*)
EMAIL_ID=<GMAIL_EMAIL>
EMAIL_PASSWORD=<GMAIL_PASSWORD_TOKEN>
NOTIFICATIONS_EMAIL=<EMAIL_TO_SEND_NOTIFICATIONS_TO>

# Third party API tokens
AI_KEY=<OPENAI_API_KEY>
OPENAI_API_KEY=<OPENAI_API_KEY>

# Azure API
# AZURE_LOG_LEVEL=info
AZURE_OPENAI_KEY=<AZURE_RESOURCE_KEY>
AZURE_OPENAI_ENDPOINT=<AZURE_RESOURCE_ENDPOINT>
AZURE_MODEL_DEPLOYMENT_NAME=<AZURE_MODEL_DEPLOYMENT_NAME>

# JWT configuration (replace <RANDOM_TOKEN_SECRET> and <ANOTHER_RANDOM_TOKEN_SECRET> with your random strings, hopefully at least 32 characters long)
REFRESH_TOKEN_TOP_SECRET=<RANDOM_TOKEN_SECRET>
ACCESS_TOKEN_TOP_SECRET=<ANOTHER_RANDOM_TOKEN_SECRET>
REFRESH_TOKEN_NAME=translator-app-refresh-token
REFRESH_TOKEN_EXPIRES_IN=7days
ACCESS_TOKEN_EXPIRES_IN=3600

# Logging configuration: LOG_LEVEL - level of logging to stdout, FILE_LOG_LEVEL - level of logging to logs/ file. Options: error, warn, info, http, verbose, debug, silly.
LOG_LEVEL=silly
FILE_LOG_LEVEL=info
FILE_LOG_PATH=./logs/app.log

# Data store configuration
RAW_SAMPLES_PATH=./data/sample_translation_data.csv
VERIFIED_SAMPLES_PATH=./data/sample_translation_data_checked.csv
VECTOR_DATA_STORE_PATH=./data/vector_store_local

# Cloud storage configuration (Azure Blob Storage)
STORAGE_ACCOUNT_NAME=<STORAGE_ACCOUNT_NAME>
STORAGE_CONNECTION_STRING=<STORAGE_CONNECTION_STRING>
STORAGE_CONTAINER_NAME=<STORAGE_CONTAINER_NAME>
